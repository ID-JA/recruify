import { MantineTheme } from '@mantine/core'
import { ReactNode } from 'react'

export type DataGridProps<T> = {
  /**
   * Visible columns
   */
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  columns: any //DataGridColumn<T>[]

  /**
   * Visible records; the `DataGrid` component will try to infer its row type from here
   */
  data: T[]

  withColumnBorder?: boolean

  /**
   * Table border color, applied to the outer border, the header bottom border, and the pagination
   * footer top border; defaults to
   * `(theme) => (theme.colorScheme === 'dark' ? theme.colors.dark[4] : theme.colors.gray[3])`
   */
  borderColor?: string | ((theme: MantineTheme) => string)

  height?: string | number

  rowBorderColor?: string | ((theme: MantineTheme) => string)

  verticalAlignment?: 'top' | 'bottom' | 'center'
}

export type DataGridColumn<T> = {
  /**
   * Column accessor; you can use dot-notation for nested objects property drilling
   * (i.e. `department.name` or `department.company.name`)
   */
  accessor: string

  /**
   * Optional column header title; if not present, one will be generated by "humanizing"
   * the provided column accessor
   * (i.e. `firstName` -> `First name`; `user.firstName` -> `User first name`)
   */
  title?: ReactNode

  render?: (record: T) => ReactNode

  textAlignment?: 'left' | 'right' | 'center'
}
